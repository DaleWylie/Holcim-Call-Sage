"use client"

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion"
import { Badge } from "@/components/ui/badge"
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import type { GenerateNonBiasedReviewOutput } from "@/ai/flows/generate-non-biased-review"
import { CheckCircle2, ListChecks, Sparkles, Target } from "lucide-react"

interface ReviewDisplayProps {
  review: GenerateNonBiasedReviewOutput
}

const getScoreColor = (score: number) => {
  if (score >= 4) return "bg-green-500"
  if (score >= 3) return "bg-yellow-500"
  return "bg-red-500"
}

export function ReviewDisplay({ review }: ReviewDisplayProps) {
  return (
    <div className="bg-gray-50/50 dark:bg-background/50 p-6 rounded-lg border border-border shadow-inner text-left mt-8">
      <h2 className="text-2xl font-bold text-foreground mb-4 font-headline flex items-center justify-center gap-2">
        <Sparkles className="h-6 w-6 text-accent" />
        Generated Review
      </h2>

      <Card className="mb-6">
        <CardHeader>
          <CardTitle>Call Review - {review.analystName}</CardTitle>
          <CardDescription>{review.quickSummary}</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex items-center gap-2">
            <span className="text-sm font-medium">Quick Score:</span>
            <Badge variant="secondary" className="text-base">
              {review.quickScore}
            </Badge>
          </div>
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <div className="flex items-center gap-2">
            <ListChecks className="h-5 w-5 text-primary" />
            <CardTitle className="text-xl">Detailed Scores</CardTitle>
          </div>
        </CardHeader>
        <CardContent>
          <Accordion type="single" collapsible className="w-full">
            {review.scores.map((item, index) => (
              <AccordionItem value={`item-${index}`} key={index}>
                <AccordionTrigger>
                  <div className="flex items-center gap-4 w-full">
                    <Badge
                      className={`w-12 h-6 flex items-center justify-center text-white ${getScoreColor(item.score)}`}
                    >
                      {item.score}/5
                    </Badge>
                    <span className="flex-1 text-left font-medium">{item.criterion}</span>
                  </div>
                </AccordionTrigger>
                <AccordionContent className="pl-16">
                  {item.justification}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </CardContent>
      </Card>

      <Card className="mb-6">
        <CardHeader>
          <div className="flex items-center gap-2">
            <CheckCircle2 className="h-5 w-5 text-primary" />
            <CardTitle className="text-xl">Overall Summary</CardTitle>
          </div>
        </CardHeader>
        <CardContent>
          <p className="text-sm text-foreground">{review.overallSummary}</p>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <div className="flex items-center gap-2">
            <Target className="h-5 w-5 text-primary" />
            <CardTitle className="text-xl">Areas for Improvement</CardTitle>
          </div>
        </CardHeader>
        <CardContent>
          <ul className="list-disc pl-5 space-y-2">
            {review.areasForImprovement.map((item, index) => (
              <li key={index} className="text-sm text-foreground">
                {item}
              </li>
            ))}
          </ul>
        </CardContent>
      </Card>

      <p className="text-sm text-muted-foreground mt-6 text-center">
        This review is generated by AI and should be used as an assistant tool.
        Always apply human judgement.
      </p>
    </div>
  )
}
